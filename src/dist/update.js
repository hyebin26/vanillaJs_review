/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/javascript/comment.js":
/*!***********************************!*\
  !*** ./src/javascript/comment.js ***!
  \***********************************/
/***/ (() => {

eval("const loadDate = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth();\r\n  const ddate = date.getDate();\r\n  const hour = date.getHours();\r\n  const min = date.getMinutes();\r\n  const time = `${year} : ${month + 1 >= 10 ? month : \"0\" + (month + 1)} : ${\r\n    ddate >= 10 ? ddate : \"0\" + ddate\r\n  }  ${hour >= 10 ? hour : \"0\" + hour}:${min >= 10 ? min : \"0\" + min}`;\r\n  return time;\r\n};\r\n\r\nconst clickCommentEdit = async (e) => {\r\n  const editContent = e.target.parentNode.previousSibling;\r\n  const id = location.href.split(\"update/\")[1];\r\n  const editList = editContent.parentNode;\r\n  const editSpan = document.createElement(\"span\");\r\n  const editDate = e.target.parentNode.nextElementSibling;\r\n  editSpan.innerText = editContent.value;\r\n  editDate.innerText = loadDate();\r\n  editSpan.classList.add(\"comments_feed_content\");\r\n\r\n  editList.replaceChild(editSpan, editContent);\r\n  e.target.parentNode.removeChild(e.target);\r\n\r\n  await fetch(\r\n    `https://review-server.herokuapp.com/review/updateData/${id}/comment/edit`,\r\n    {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        editDataset: editList.dataset.commentNum,\r\n        editTime: loadDate(),\r\n        editContent: editSpan.innerText,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\nconst handleCommentDelete = async (e) => {\r\n  e.preventDefault();\r\n  const id = location.href.split(\"update/\")[1];\r\n  const list = e.target.parentNode.parentNode;\r\n  const listContainer = list.parentNode;\r\n  listContainer.removeChild(list);\r\n  await fetch(\r\n    `https://review-server.herokuapp.com/review/updateData/${id}/comment/delete`,\r\n    {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        deleteNum: list.dataset.commentNum,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\nconst handleCommentUpdate = (e) => {\r\n  e.preventDefault();\r\n  const content = e.target.parentNode.previousSibling;\r\n  const feedList = content.parentNode;\r\n  const newInput = document.createElement(\"input\");\r\n  const insertBtn = document.createElement(\"button\");\r\n\r\n  newInput.setAttribute(\"type\", \"text\");\r\n  newInput.setAttribute(\"value\", content.innerText);\r\n  insertBtn.innerText = \"확인\";\r\n\r\n  feedList.replaceChild(newInput, content);\r\n  e.target.parentNode.appendChild(insertBtn);\r\n\r\n  insertBtn.addEventListener(\"click\", clickCommentEdit);\r\n};\r\n\r\nconst showComment = (comment) => {\r\n  const updateForm = document.querySelector(\".comment_form\");\r\n  const commentList = document.createElement(\"li\");\r\n  const commentUserId = document.createElement(\"span\");\r\n  const commentContent = document.createElement(\"span\");\r\n  const commentFeedDiv = document.createElement(\"div\");\r\n  const commentFeedDeleteBtn = document.createElement(\"button\");\r\n  const commentFeedUpdateBtn = document.createElement(\"button\");\r\n  const commentDate = document.createElement(\"p\");\r\n  const updateCommentContainer = document.querySelector(\".comments\");\r\n  const currentUser = sessionStorage.getItem(\"currentUser\");\r\n\r\n  commentList.dataset.commentNum = comment.comment_num;\r\n\r\n  commentList.classList.add(\"comments_feed\");\r\n  commentUserId.classList.add(\"comments_feed_userId\");\r\n  commentContent.classList.add(\"comments_feed_content\");\r\n  commentFeedDiv.classList.add(\"comment_feed_div\");\r\n\r\n  commentDate.classList.add(\"comment_date\");\r\n\r\n  updateCommentContainer.appendChild(commentList);\r\n  commentList.appendChild(commentUserId);\r\n  commentList.appendChild(commentContent);\r\n  commentList.appendChild(commentFeedDiv);\r\n  commentList.appendChild(commentDate);\r\n\r\n  commentDate.innerText = comment.update_time;\r\n  commentUserId.innerText = comment.comment_id;\r\n  commentContent.innerText = comment.comment_content;\r\n\r\n  if (currentUser == comment.comment_id) {\r\n    commentFeedDiv.appendChild(commentFeedUpdateBtn);\r\n    commentFeedDiv.appendChild(commentFeedDeleteBtn);\r\n    commentFeedDeleteBtn.classList.add(\"comment_delete_btn\");\r\n    commentFeedUpdateBtn.classList.add(\"comment_update_btn\");\r\n    commentFeedUpdateBtn.innerText = \"수정\";\r\n    commentFeedDeleteBtn.innerText = \"삭제\";\r\n    commentFeedDeleteBtn.addEventListener(\"click\", handleCommentDelete);\r\n    commentFeedUpdateBtn.addEventListener(\"click\", handleCommentUpdate);\r\n  }\r\n\r\n  updateForm.reset();\r\n};\r\n\r\nconst clickCommentAddBtn = async (event) => {\r\n  event.preventDefault();\r\n\r\n  const id = location.href.split(\"update/\")[1];\r\n  const currentUser = sessionStorage.getItem(\"currentUser\");\r\n  const updateCommentInput = document.querySelector(\".update_comment_input\");\r\n  if (updateCommentInput.value === \"\") {\r\n    return false;\r\n  } else {\r\n    const addComment = {\r\n      comment_id: currentUser,\r\n      comment_content: updateCommentInput.value,\r\n      create_time: loadDate(),\r\n      update_time: loadDate(),\r\n    };\r\n    const option = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(addComment),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    await fetch(\r\n      `https://review-server.herokuapp.com/review/updateData/${id}/comment`,\r\n      option\r\n    ); //\r\n    showComment(addComment);\r\n    location.href = `/review/update/${id}`;\r\n  }\r\n};\r\n\r\nconst fetchComment = async () => {\r\n  let commentData = {};\r\n  const updateAddFormBtn = document.querySelector(\".comment_add_btn\");\r\n  const id = location.href.split(\"update/\")[1];\r\n\r\n  await fetch(\r\n    `https://review-server.herokuapp.com/review/updateData/${id}/comment`\r\n  ) //\r\n    .then((res) => res.json()) //\r\n    .then((data) => (commentData = data))\r\n    .catch((err) => new Error(err));\r\n  commentData.map((comment) => showComment(comment));\r\n  updateAddFormBtn.addEventListener(\"click\", clickCommentAddBtn);\r\n};\r\n\r\nconst commentInit = () => {\r\n  fetchComment();\r\n};\r\ncommentInit();\r\n\n\n//# sourceURL=webpack://js_review/./src/javascript/comment.js?");

/***/ }),

/***/ "./src/javascript/update.js":
/*!**********************************!*\
  !*** ./src/javascript/update.js ***!
  \**********************************/
/***/ (() => {

eval("const loadUpdate = async () => {\r\n  const id = location.href.split(\"update/\")[1];\r\n  const data = await fetch(\r\n    `https://review-server.herokuapp.com/review/updateData/${id}`\r\n  ) //\r\n    .then((result) => result.json());\r\n  showUpdateData(data[0]);\r\n};\r\n\r\nconst clickUpdateDelete = async (e) => {\r\n  const id = location.href.split(\"update/\")[1];\r\n  const currentUser = sessionStorage.getItem(\"currentUser\");\r\n  const userValue = document.querySelector(\".user_name\").innerText;\r\n  if (currentUser == userValue) {\r\n    const contentDataset = e.target.parentNode.parentNode.dataset.contentId;\r\n    const opt = {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        contentId: contentDataset,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    if (confirm(\"삭제하시겠습니까?\")) {\r\n      await fetch(\r\n        `https://review-server.herokuapp.com/review/updateData/${id}/delete`,\r\n        opt\r\n      );\r\n      location.href = \"/review\";\r\n    } else {\r\n      return false;\r\n    }\r\n  } else {\r\n    e.preventDefault();\r\n    alert(\"권한이 없습니다.\");\r\n    return false;\r\n  }\r\n};\r\n\r\nconst clickUpdateEdit = async (e) => {\r\n  e.preventDefault();\r\n  const id = location.href.split(\"update/\")[1];\r\n  const currentUser = sessionStorage.getItem(\"currentUser\");\r\n  const userValue = document.querySelector(\".user_name\").innerText;\r\n  if (currentUser == userValue) {\r\n    const dataset = document.querySelector(\".update_content_container\").dataset\r\n      .contentId;\r\n    const opt = {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        contentId: dataset,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    location.href = location.href + \"/edit\";\r\n    await fetch(\r\n      `https://review-server.herokuapp.com/review/updateData/${id}/edit`,\r\n      opt\r\n    );\r\n  } else {\r\n    e.preventDefault();\r\n    alert(\"권한이 없습니다.\");\r\n    return false;\r\n  }\r\n};\r\n\r\nconst showUpdateData = (item) => {\r\n  const updateDelete = document.querySelector(\".update_edit_delete\");\r\n  const updateEdit = document.querySelector(\".update_edit_edit\");\r\n\r\n  const updateTitle = document.querySelector(\".update_title\");\r\n  const updateCategory = document.querySelector(\".update_category\");\r\n  const updateSubTitle = document.querySelector(\".update_sub_title\");\r\n  const updateDescription = document.querySelector(\".update_description\");\r\n  const updateContainer = document.querySelector(\".update_content_container\");\r\n  const updateCurrentUser = document.querySelector(\".user_name\");\r\n\r\n  updateCurrentUser.innerText = item.userId;\r\n  updateContainer.dataset.contentId = item.id;\r\n  updateTitle.innerText = item.title;\r\n  updateCategory.innerText = \"#\" + item.category;\r\n  updateSubTitle.innerText = \"#\" + item.sub_title;\r\n  updateDescription.innerText = item.content;\r\n\r\n  updateEdit.setAttribute(\"href\", location.href + \"/edit\");\r\n  updateEdit.addEventListener(\"click\", clickUpdateEdit);\r\n  updateDelete.addEventListener(\"click\", clickUpdateDelete);\r\n};\r\n\r\nconst updateInit = () => {\r\n  loadUpdate();\r\n};\r\nupdateInit();\r\n\n\n//# sourceURL=webpack://js_review/./src/javascript/update.js?");

/***/ }),

/***/ "./src/javascript/user.js":
/*!********************************!*\
  !*** ./src/javascript/user.js ***!
  \********************************/
/***/ (() => {

eval("const clickLogoutBtn = (e) => {\r\n  e.preventDefault();\r\n  sessionStorage.removeItem(\"currentUser\");\r\n  location.replace(\"/review\");\r\n};\r\n\r\nconst loadUser = () => {\r\n  const currentUser = sessionStorage.getItem(\"currentUser\");\r\n  const loginBtn = document.querySelector(\".search_loginBtn\");\r\n  const profileBtn = document.querySelector(\".search_profile\");\r\n\r\n  if (currentUser == null) {\r\n    profileBtn.setAttribute(\"href\", \"/review/signUp\");\r\n    profileBtn.innerText = \"회원가입\";\r\n  } else {\r\n    loginBtn.innerText = \"로그아웃\";\r\n    loginBtn.addEventListener(\"click\", clickLogoutBtn);\r\n    profileBtn.setAttribute(\"href\", \"/review/profile\");\r\n    profileBtn.innerText = currentUser;\r\n  }\r\n};\r\n\r\nconst userInit = () => {\r\n  loadUser();\r\n};\r\nuserInit();\r\n\n\n//# sourceURL=webpack://js_review/./src/javascript/user.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./src/javascript/user.js"]();
/******/ 	__webpack_modules__["./src/javascript/update.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/javascript/comment.js"]();
/******/ 	
/******/ })()
;